basePath: /
definitions:
  domain.Auth:
    properties:
      email:
        type: string
      expired:
        type: string
      phone_number:
        type: string
      token:
        type: string
      username:
        type: string
    type: object
  domain.Brand:
    properties:
      brand_id:
        type: string
      brand_name:
        maxLength: 12
        minLength: 3
        type: string
      created_at:
        type: string
      updated_at:
        type: string
    required:
    - brand_name
    type: object
  domain.BrandRequestSchema:
    properties:
      brand_name:
        maxLength: 12
        minLength: 3
        type: string
    required:
    - brand_name
    type: object
  domain.BrandResponseSchema:
    properties:
      brand_id:
        type: string
      brand_name:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
    type: object
  domain.Customer:
    properties:
      activityAt:
        type: string
      authToken:
        type: string
      brand:
        $ref: '#/definitions/domain.Brand'
      brandId:
        type: string
      createdAt:
        type: string
      customerID:
        type: string
      customerName:
        type: string
      email:
        type: string
      fistName:
        type: string
      lastName:
        type: string
      phoneNumber:
        type: string
      platFrom:
        type: string
      updatedAt:
        type: string
    type: object
  domain.CustomerRequestSchema:
    properties:
      customer_name:
        minLength: 3
        type: string
      email:
        minLength: 3
        type: string
      fist_name:
        minLength: 3
        type: string
      last_name:
        minLength: 3
        type: string
      phone_number:
        maxLength: 10
        minLength: 10
        type: string
    required:
    - customer_name
    - email
    - fist_name
    - last_name
    - phone_number
    type: object
  domain.CustomerResponseSchema:
    properties:
      createdAt:
        type: string
      customer_name:
        minLength: 3
        type: string
      email:
        minLength: 3
        type: string
      fist_name:
        minLength: 3
        type: string
      last_name:
        minLength: 3
        type: string
      phone_number:
        maxLength: 10
        minLength: 10
        type: string
      updatedAt:
        type: string
    required:
    - customer_name
    - email
    - fist_name
    - last_name
    - phone_number
    type: object
  domain.Login:
    properties:
      password:
        minLength: 8
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  domain.Permission:
    properties:
      created_at:
        type: string
      permission_group_id:
        type: string
      permission_id:
        type: string
      permission_name:
        type: string
      permissionGroup:
        $ref: '#/definitions/domain.PermissionGroup'
      updated_at:
        type: string
    type: object
  domain.PermissionGroup:
    properties:
      created_at:
        type: string
      permission:
        items:
          $ref: '#/definitions/domain.Permission'
        type: array
      permission_group_id:
        type: string
      permission_group_name:
        type: string
      updated_at:
        type: string
    type: object
  domain.Player:
    properties:
      created_at:
        type: string
      player_id:
        type: string
      player_name:
        minLength: 3
        type: string
      updated_at:
        type: string
    required:
    - player_name
    type: object
  domain.Role:
    properties:
      created_at:
        type: string
      permission_group:
        $ref: '#/definitions/domain.PermissionGroup'
      permission_group_id:
        type: string
      role_id:
        type: string
      role_name:
        type: string
      updated_at:
        type: string
    type: object
  go_game_auth_core_domain.User:
    properties:
      email:
        type: string
      first_Name:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      user_id:
        type: string
      username:
        type: string
    type: object
  go_game_crm_core_domain.User:
    properties:
      bradId:
        type: string
      brand:
        $ref: '#/definitions/domain.Brand'
      created_at:
        type: string
      email:
        minLength: 3
        type: string
      first_name:
        minLength: 3
        type: string
      last_name:
        minLength: 3
        type: string
      phone_number:
        maxLength: 10
        minLength: 10
        type: string
      role:
        $ref: '#/definitions/domain.Role'
      role_id:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
      user_name:
        minLength: 3
        type: string
    required:
    - email
    - first_name
    - last_name
    - phone_number
    - user_name
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server for a game API.
  title: Game API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: Login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/domain.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Auth'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Login
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register
      parameters:
      - description: Register
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/domain.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/go_game_auth_core_domain.User'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Register
      tags:
      - Auth
  /brand:
    post:
      consumes:
      - application/json
      description: CreateNewBrand
      parameters:
      - description: NewBrand
        in: body
        name: brand
        required: true
        schema:
          $ref: '#/definitions/domain.BrandRequestSchema'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.BrandResponseSchema'
            type: array
      security:
      - ApiKeyAuth: []
      summary: CreateNewBrand
      tags:
      - Brand
  /brand/list:
    get:
      consumes:
      - application/json
      description: GetAllBrand
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Brand'
            type: array
      security:
      - ApiKeyAuth: []
      summary: GetAllBrand
      tags:
      - Brand
  /customer:
    get:
      consumes:
      - application/json
      description: GetAllCustomer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Customer'
            type: array
      security:
      - ApiKeyAuth: []
      summary: GetAllCustomer
      tags:
      - Customer
    post:
      consumes:
      - application/json
      description: CreateNewCustomer
      parameters:
      - description: NewCustomer
        in: body
        name: brand
        required: true
        schema:
          $ref: '#/definitions/domain.CustomerRequestSchema'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.CustomerResponseSchema'
            type: array
      security:
      - ApiKeyAuth: []
      summary: CreateNewCustomer
      tags:
      - Customer
  /player:
    delete:
      consumes:
      - application/json
      description: DeletePlayer
      parameters:
      - description: Player ID
        in: path
        name: player_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Player'
            type: array
      security:
      - ApiKeyAuth: []
      summary: DeletePlayer
      tags:
      - Player
    get:
      consumes:
      - application/json
      description: GetPlayerById
      parameters:
      - description: Player ID
        in: path
        name: player_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Player'
            type: array
      security:
      - ApiKeyAuth: []
      summary: GetPlayerById
      tags:
      - Player
    patch:
      consumes:
      - application/json
      description: UpdatePlayer
      parameters:
      - description: UpdatePlayer
        in: body
        name: player
        required: true
        schema:
          $ref: '#/definitions/domain.Player'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Player'
            type: array
      security:
      - ApiKeyAuth: []
      summary: UpdatePlayer
      tags:
      - Player
    post:
      consumes:
      - application/json
      description: CreateNewPlayer
      parameters:
      - description: NewPlayer
        in: body
        name: player
        required: true
        schema:
          $ref: '#/definitions/domain.Player'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Player'
            type: array
      security:
      - ApiKeyAuth: []
      summary: CreateNewPlayer
      tags:
      - Player
  /player/list:
    get:
      consumes:
      - application/json
      description: GetAllPlayer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Player'
            type: array
      security:
      - ApiKeyAuth: []
      summary: GetAllPlayer
      tags:
      - Player
  /user:
    post:
      consumes:
      - application/json
      description: CreateNewUser
      parameters:
      - description: NewUser
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/go_game_crm_core_domain.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/go_game_crm_core_domain.User'
            type: array
      security:
      - ApiKeyAuth: []
      summary: CreateNewUser
      tags:
      - User
  /user/list:
    get:
      consumes:
      - application/json
      description: GetAllUser
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/go_game_crm_core_domain.User'
            type: array
      security:
      - ApiKeyAuth: []
      summary: GetAllUser
      tags:
      - User
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
