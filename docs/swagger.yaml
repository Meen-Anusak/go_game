basePath: /
definitions:
  domain.Auth:
    properties:
      email:
        type: string
      expired:
        type: string
      phone_number:
        type: string
      token:
        type: string
      username:
        type: string
    type: object
  domain.Login:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  domain.Player:
    properties:
      created_at:
        type: string
      player_id:
        type: string
      player_name:
        type: string
      updated_at:
        type: string
    type: object
  go_game_auth_core_domain.User:
    properties:
      email:
        type: string
      first_Name:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      user_id:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server for a game API.
  title: Game API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: Login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/domain.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Auth'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Login
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register
      parameters:
      - description: Register
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/domain.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/go_game_auth_core_domain.User'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Register
      tags:
      - Auth
  /player:
    delete:
      consumes:
      - application/json
      description: DeletePlayer
      parameters:
      - description: Player ID
        in: path
        name: player_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Player'
            type: array
      security:
      - ApiKeyAuth: []
      summary: DeletePlayer
      tags:
      - Player
    get:
      consumes:
      - application/json
      description: GetPlayerById
      parameters:
      - description: Player ID
        in: path
        name: player_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Player'
            type: array
      security:
      - ApiKeyAuth: []
      summary: GetPlayerById
      tags:
      - Player
    patch:
      consumes:
      - application/json
      description: UpdatePlayer
      parameters:
      - description: UpdatePlayer
        in: body
        name: player
        required: true
        schema:
          $ref: '#/definitions/domain.Player'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Player'
            type: array
      security:
      - ApiKeyAuth: []
      summary: UpdatePlayer
      tags:
      - Player
    post:
      consumes:
      - application/json
      description: CreateNewPlayer
      parameters:
      - description: NewPlayer
        in: body
        name: player
        required: true
        schema:
          $ref: '#/definitions/domain.Player'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Player'
            type: array
      security:
      - ApiKeyAuth: []
      summary: CreateNewPlayer
      tags:
      - Player
  /player/list:
    get:
      consumes:
      - application/json
      description: GetAllPlayer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Player'
            type: array
      security:
      - ApiKeyAuth: []
      summary: GetAllPlayer
      tags:
      - Player
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
